@using PagedList
@using PagedList.Mvc;
@model mfc.web.Models.FileListViewModel

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css"/>

@{
    ViewBag.Title = "Список дел";
}
@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <h1 class="page-header">@ViewBag.Title</h1>
            <p>
               @using (Html.BeginForm()) {
                <div style="margin: 0 10px;float:left">
                    @Html.LabelFor(m => m.BeginDate): @Html.EditorFor(m => m.BeginDate)
                </div>
                <div style="margin: 0 10px;float:left">
                    @Html.LabelFor(m => m.EndDate): @Html.EditorFor(m => m.EndDate)
                </div>
                <div style="margin: 0 10px;float:left">
                    @Html.LabelFor(m=>m.SelectedStatusId): @Html.DropDownListFor(m => m.SelectedStatusId, new SelectList(Model.Statuses, "Id", "Caption"), new { @class = "form-control" })
                </div>
                <div style="margin: 0 10px;float:left">
                    @Html.LabelFor(m => m.SelectedOgvId): @Html.DropDownListFor(m => m.SelectedOgvId, new SelectList(Model.Organizations, "Id", "Caption"), new { @class = "form-control" })
                </div>
                <div style="margin: 0 10px;float:left">
                    @Html.LabelFor(m => m.SelectedControllerId): @Html.DropDownListFor(m => m.SelectedControllerId, new SelectList(Model.Controllers, "Id", "Name"), new { @class = "form-control" })
                </div>
                <div style="margin: 0 10px;float:left">
                    @Html.LabelFor(m => m.SelectedExpertId) : @Html.DropDownListFor(m => m.SelectedExpertId, new SelectList(Model.Experts, "Id", "Name"), new { @class = "form-control" })
                </div>
                <input type="submit" value="Обновить" class="btn btn-lg btn-default" />
                <div style="clear:both" />
               }
            </p>
        </div>
    </section>

    }
@section workmenu {
    @Html.Partial("_WorkMenu", mfc.web.Constants.WorkMenuItems.Files)
}
<hr/>
@{
    var itemOnPage = 50;

    int pageCount = (int)Math.Round((decimal)Model.Files.Count / itemOnPage, 0);
    if (pageCount == 0) {
        pageCount = 1;
    }

    var firstIndex = (Model.Page - 1)*itemOnPage + 1;
    var lastIndex = Model.Page*itemOnPage;

    if (lastIndex >= Model.Files.Count) {
        lastIndex = Model.Files.Count - 1;
    }

    var files = new List<mfc.web.Models.FileModelItem>();

    for (int index = firstIndex; index <= lastIndex; index++) {
        files.Add(Model.Files[index-1]);
    }

    var pagerModel = Model.Files.ToPagedList(Model.Page, itemOnPage);
}


@Html.Partial("_FileList", files)


@Html.PagedListPager(pagerModel, page => Url.Action("Index", new { page }))