@model IEnumerable<mfc.web.Models.AccountInfo>

@{
    ViewBag.Title = "Администрирование";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var rowsPerPage = !string.IsNullOrEmpty(Request.Params["rowsPerPage"]) ? Convert.ToInt16(Request.Params["rowsPerPage"]) : 5;

    var grid = new WebGrid(null,
                          defaultSort: "UserName",
                          rowsPerPage: rowsPerPage);
    grid.Bind(Model, autoSortAndPage: true);

}
@section workmenu {
    @Html.Partial("_AdminMenu", 0)
}

<h2>Список пользователей</h2>

<p>
    @Html.ActionLink("Добавить пользователя", "Create")
</p>

@Html.DropDownList("Sortby", new SelectListItem[]
    {
        new SelectListItem() { Text = "5", Value = "5" },
        new SelectListItem() { Text = "10", Value = "10" },
        new SelectListItem() { Text = "15", Value = "15" },

    }, Request.Params["rowsPerPage"],
       new { @onchange = "CallChangefunc(this.value)" }
)



@grid.GetHtml(columns: new[]
{
    grid.Column(columnName: "UserName", header: ModelMetadata.FromLambdaExpression (x=>x.UserName, new ViewDataDictionary<mfc.web.Models.AccountInfo>(new mfc.web.Models.AccountInfo())).DisplayName),
    grid.Column(columnName: "Description", header: ModelMetadata.FromLambdaExpression (x=>x.Description, new ViewDataDictionary<mfc.web.Models.AccountInfo>(new mfc.web.Models.AccountInfo())).DisplayName),
    grid.Column(format: (item) => Html.ActionLink("Изменить", "Edit", new { id = item.id })),
    grid.Column(format: (item) => Html.ActionLink("Изменить пароль", "SetPassword", new { id = item.Id })),
    grid.Column(format: (item) => Html.ActionLink("Удалить", "Delete", new { id = item.Id })),
})

<script>
    function addOrUpdateUrlParam(uri, paramKey, paramVal) {
        var re = new RegExp("([?&])" + paramKey + "=[^&#]*", "i");
        if (re.test(uri)) {
            uri = uri.replace(re, '$1' + paramKey + "=" + paramVal);
        } else {
            var separator = /\?/.test(uri) ? "&" : "?";
            uri = uri + separator + paramKey + "=" + paramVal;
        }
        return uri;
    }
    function CallChangefunc(val) {
        window.location.href = addOrUpdateUrlParam(window.location.href, "rowsPerPage", val);
    }
</script>